<?php namespace common\components; use Yii; use \SimpleXMLElement; class PikPay {private $_buyer = array('ch_full_name', 'ch_address', 'ch_city', 'ch_zip', 'ch_country', 'ch_phone', 'ch_email'); private $_card 	= array('pan', 'cvv', 'expiration_date'); private $_order = array('order_info', 'order_number', 'amount', 'currency'); private $_other = array('language', 'transaction_type', 'authenticity_token', 'number_of_installments', 'moto', 'key'); private $_remember_card = FALSE; private $_token = FALSE; private $_ip = '127.0.0.1'; private $_default_settings; private $_errors = array(); public static function transaction($Vwlavmkuppwl = NULL) {return new PikPay($Vwlavmkuppwl); } public function __construct($Vwlavmkuppwl) {$this->_default_settings = array('language' => 'en', 'transaction_type' => 'purchase', 'authenticity_token' => '8e0bfde4bc5087de16655624405e46dc0712736c', 'number_of_installments' => 1, 'moto' => FALSE, 'key' => 'Rene*salis1', 'currency' => 'BAM', 'test' => TRUE ); if ($Vwlavmkuppwl !== NULL AND in_array($Vwlavmkuppwl, array('authorize', 'purchase', 'capture', 'refund', 'void'))) {$this->_other['transaction_type'] = $Vwlavmkuppwl; } else {$this->_other['transaction_type'] = $this->_default_settings['transaction_type']; } $this->_other['language'] = $this->_default_settings['language']; $this->_other['authenticity_token'] = $this->_default_settings['authenticity_token']; $this->_other['number_of_installments'] = $this->_default_settings['number_of_installments']; $this->_other['moto'] = $this->_default_settings['moto']; $this->_other['key'] = $this->_default_settings['key']; $this->_order['currency'] = $this->_default_settings['currency']; if ($this->_default_settings['test'] === FALSE) {$this->_ip = Yii::$app->getRequest()->getUserIP(); } } public function order($Vn3q1bsj4ebd) {if (!is_array($Vn3q1bsj4ebd)) {$this->_errors['order_error_001'] = 'Submitted order data must be an array containing the following elements: order_number, order_info, amount, currency (optional)'; } elseif (count($Vn3q1bsj4ebd) < 3) {$this->_errors['order_error_002'] = 'Submitted order data is missing some elements.'; } if (array_key_exists('currency', $Vn3q1bsj4ebd)) {$this->_order['currency'] = $Vn3q1bsj4ebd['currency']; } $this->_order['order_number'] = $Vn3q1bsj4ebd['order_number']; $this->_order['order_info'] = $Vn3q1bsj4ebd['order_info']; $this->_order['amount'] = $Vn3q1bsj4ebd['amount'] * 100; return $this; } public function buyer($Vn3q1bsj4ebd) {if (!is_array($Vn3q1bsj4ebd)) {$this->_errors['buyer_error_001'] = 'Submitted buyer\'s data must be an array containing the following elements: ch_full_name, ch_address, ch_city, ch_zip, ch_country, ch_phone, ch_email'; } elseif (count($Vn3q1bsj4ebd) < 7) {$this->_errors['buyer_error_002'] = 'Submitted buyer\'s data is missing some elements.'; } else {$this->_buyer['ch_full_name'] = $Vn3q1bsj4ebd['ch_full_name']; $this->_buyer['ch_address'] = $Vn3q1bsj4ebd['ch_address']; $this->_buyer['ch_city'] = $Vn3q1bsj4ebd['ch_city']; $this->_buyer['ch_zip'] = $Vn3q1bsj4ebd['ch_zip']; $this->_buyer['ch_country'] = $Vn3q1bsj4ebd['ch_country']; $this->_buyer['ch_phone'] = $Vn3q1bsj4ebd['ch_phone']; $this->_buyer['ch_email'] = $Vn3q1bsj4ebd['ch_email']; } return $this; } public function card($Vn3q1bsj4ebd) {if (!is_array($Vn3q1bsj4ebd)) {$this->_errors['card_error_001'] = 'Submitted card data must be an array containing the following elements: pan, cvv, expiration_date'; } elseif (count($Vn3q1bsj4ebd) < 3) {$this->_errors['card_error_002'] = 'Submitted card data is missing some elements.'; } elseif (!self::check_card($Vn3q1bsj4ebd['pan'])) {$this->_errors['card_error_003'] = 'Submitted card number is invalid.'; } else {$this->_card['pan'] = preg_replace('/\s+/', '', $Vn3q1bsj4ebd['pan']); $this->_card['cvv'] = $Vn3q1bsj4ebd['cvv']; $this->_card['expiration_date'] = $Vn3q1bsj4ebd['expiration_date']; } return $this; } public function token($Vsghchiwirnc, $V1g4aqlqarph) {$this->_other['moto'] = TRUE; $this->_token = $Vsghchiwirnc; $this->_card['cvv'] = $V1g4aqlqarph; return $this; } public function pay() {if (empty($this->_errors)) {$Vwpdygoym4nc = curl_init(); curl_setopt_array($Vwpdygoym4nc, array(CURLOPT_URL => $this->_get_api_url(), CURLOPT_HTTPHEADER => array('Content-Type: application/xml', 'Accept: application/xml'), CURLOPT_POST => 1, CURLOPT_POSTFIELDS => $this->_generate_xml(), CURLOPT_RETURNTRANSFER => 1, CURLOPT_SSL_VERIFYPEER => 0, CURLOPT_SSL_VERIFYHOST => 0, )); $Vv2euifkxwsl = curl_exec($Vwpdygoym4nc); $Vkgmb1kqkhnk = curl_getinfo($Vwpdygoym4nc, CURLINFO_HTTP_CODE); curl_close($Vwpdygoym4nc); if ($Vkgmb1kqkhnk == 201) {return simplexml_load_string($Vv2euifkxwsl); } else {return FALSE; } } else {return $this->_errors; } } public function set_language($V0n0fnqmxbvk) {$this->_other['language'] = $V0n0fnqmxbvk; return $this; } public function set_number_of_installments($Vbpgr3w5cz5b) {$this->_other['number_of_installments'] = $Vbpgr3w5cz5b; return $this; } public function set_key($Vpdogvxxcwpb) {$this->_other['key'] = $Vpdogvxxcwpb; return $this; } public function remember_card() {$this->_remember_card = TRUE; return $this; } private function _generate_digest() {$Vpdogvxxcwpb = $this->_other['key']; $Veq4io0gi5c4 = $this->_order['order_number']; $V0d1xslkskhn = $this->_order['amount']; $Vcgifmahngtv = $this->_order['currency']; $Vwjkd0nbcvlu = $Vpdogvxxcwpb.$Veq4io0gi5c4.$V0d1xslkskhn.$Vcgifmahngtv; return sha1($Vwjkd0nbcvlu); } private function _generate_xml() {$Vovpdq1yqurw = new SimpleXMLElement('<transaction/>'); $Vovpdq1yqurw->addChild('transaction-type', $this->_other['transaction_type']); $Vovpdq1yqurw->addChild('amount', $this->_order['amount']); $Vovpdq1yqurw->addChild('cvv', $this->_card['cvv']); if ($this->_token === FALSE) {$Vovpdq1yqurw->addChild('expiration-date', $this->_card['expiration_date']); $Vovpdq1yqurw->addChild('pan', $this->_card['pan']); } else {$Vovpdq1yqurw->addChild('pan-token', $this->_token); } $Vovpdq1yqurw->addChild('ip', $this->_ip); $Vovpdq1yqurw->addChild('order-info', $this->_order['order_info']); $Vovpdq1yqurw->addChild('ch-address', $this->_buyer['ch_address']); $Vovpdq1yqurw->addChild('ch-city', $this->_buyer['ch_city']); $Vovpdq1yqurw->addChild('ch-country', $this->_buyer['ch_country']); $Vovpdq1yqurw->addChild('ch-email', $this->_buyer['ch_email']); $Vovpdq1yqurw->addChild('ch-full-name', $this->_buyer['ch_full_name']); $Vovpdq1yqurw->addChild('ch-phone', $this->_buyer['ch_phone']); $Vovpdq1yqurw->addChild('ch-zip', $this->_buyer['ch_zip']); $Vovpdq1yqurw->addChild('currency', $this->_order['currency']); $Vovpdq1yqurw->addChild('digest', $this->_generate_digest()); $Vovpdq1yqurw->addChild('authenticity-token', $this->_other['authenticity_token']); $Vovpdq1yqurw->addChild('order-number', $this->_order['order_number']); $Vovpdq1yqurw->addChild('language', $this->_other['language']); if ($this->_other['moto'] === TRUE AND ($this->_other['transaction_type'] == 'authorize' OR $this->_other['transaction_type'] == 'purchase')) {$Vovpdq1yqurw->addChild('moto', 'true'); } if ($this->_other['number_of_installments'] > 1 AND ($this->_other['transaction_type'] == 'authorize' OR $this->_other['transaction_type'] == 'purchase')) {$Vovpdq1yqurw->addChild('number-of-installments', $this->_other['number_of_installments']); } if ($this->_remember_card === TRUE) {$Vugdu1hqqcy3 = substr($this->_card['expiration_date'], 0, 2); $Vtof2yvebfop = substr($this->_card['expiration_date'], 2, 2); $Vsghchiwirnc_life = '20'.$Vugdu1hqqcy3.'-'.$Vtof2yvebfop.'-28'; $Vovpdq1yqurw->addChild('tokenize-pan-until', $Vsghchiwirnc_life); } return $Vovpdq1yqurw->asXML(); } private function _get_api_url() {$Vync21og4yo5 = ($this->_default_settings['test'] === TRUE) ? 'test' : ''; if ($this->_other['transaction_type'] == 'capture') {return 'https://ipg'.$Vync21og4yo5.'.pikpay.ba/transactions/'.$this->_order['order_number'].'/capture.xml'; } elseif ($this->_other['transaction_type'] == 'refund') {return 'https://ipg'.$Vync21og4yo5.'.pikpay.ba/transactions/'.$this->_order['order_number'].'/refund.xml'; } elseif ($this->_other['transaction_type'] == 'void') {return 'https://ipg'.$Vync21og4yo5.'.pikpay.ba/transactions/'.$this->_order['order_number'].'/void.xml'; } else {return 'https://ipg'.$Vync21og4yo5.'.pikpay.ba/api'; } } public static function check_card($Vi5wvbmb30dz) {$Vi5wvbmb30dz = (string) $Vi5wvbmb30dz; $Vi5wvbmb30dz_length = (string) strlen($Vi5wvbmb30dz); $Vfwfw0pswvqt = array('maestro' => array('length' => '16,18', 'prefix' => '50(?:20|38)|6(?:304|759)', 'luhn'   => TRUE, ), 'mastercard' => array('length' => '16', 'prefix' => '5[1-5]', 'luhn'   => TRUE, ), 'visa' => array('length' => '13,16', 'prefix' => '4', 'luhn'   => TRUE, ), ); foreach ($Vfwfw0pswvqt as $Vqugk1frcfox => $Vf11f0bc4wiw) {$Vodwqy0oxohs = $Vf11f0bc4wiw['prefix']; $Vezi42st0523 = $Vf11f0bc4wiw['length']; if (preg_match("~^$Vodwqy0oxohs~", $Vi5wvbmb30dz) AND preg_match("~\d[$Vezi42st0523]~", $Vi5wvbmb30dz_length)) {return 'valid-'.$Vqugk1frcfox; } elseif (preg_match("~^$Vodwqy0oxohs~", $Vi5wvbmb30dz)) {return $Vqugk1frcfox; } } return FALSE; } public static function is_acceptable_bin($Vi5wvbmb30dz) {$Vi5wvbmb30dz = preg_replace('/\s+/', '', $Vi5wvbmb30dz); $Vmonauvqa43h = array('414636', '414637', '433310', '557105', '404867', '460043', '441280', ); foreach ($Vmonauvqa43h as $V2sokmoobeft) {if (preg_match("~^$V2sokmoobeft~", $Vi5wvbmb30dz)) {return TRUE; } } return FALSE; } public static function generate_order_number($Vodwqy0oxohs = NULL) {return $Vodwqy0oxohs.'_'.time(); } }